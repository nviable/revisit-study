{
    "name": "Forensic Goal Task",
    "description": "The capability of the analytics, ranging from manipulation detection to device source attribution.",
    "children": [
        {
            "name": "Forgery & Manipulation Detection",
            "description": "Identifying if digital media has been altered, forged, or manipulated from its original state. This is a primary task in verifying the authenticity of digital evidence.",
            "examples": [
                "Detecting if a face in a photo was swapped to incriminate an innocent person.",
                "Analyzing a will document (PDF) to see if signatures or clauses were digitally added or removed."
            ],
            "associated_terms": [
                "cheapfakes",
                "cheapfakes (e.g., lookalikes or audio dubbing)",
                "digitally retouched images",
                "forgery image detection",
                "general purpose forgery detection",
                "image editing detection",
                "image forgeries",
                "image forgery",
                "image forgery detection",
                "image forgery detection and localization",
                "image forgery detection and localization (ifdl)",
                "image forgery localization",
                "image forgery location (ifl)",
                "image local forgery detection",
                "image local manipulation",
                "image manipulation",
                "image manipulation chain detection",
                "image manipulation detection",
                "image manipulation localization",
                "image manipulation localization, applicable to both face and generic images",
                "image tampering detection",
                "image tampering localization",
                "manipulated pixels",
                "manipulated videos",
                "manual image forgery techniques",
                "manually and gans tampered images",
                "manipulation",
                "morphed face images",
                "morphing attacks",
                "object-based forgery",
                "partial image manipulation",
                "photorealistic manipulations",
                "tampered images",
                "tampered text detection",
                "video forgery",
                "video manipulations",
                "cnn-synthesized or image editing",
                "image enhancements",
                "sentence replacement",
                "unseen face manipulation"
            ],
            "children": [
                {
                    "name": "Content Synthesis",
                    "description": "Detecting manipulations that involve generating entirely new content within a piece of media.",
                    "examples": [
                        "Identifying a deepfake video of a CEO announcing false company earnings.",
                        "Detecting a synthetically generated face (thispersondoesnotexist) in a fake social media profile used for a scam."
                    ],
                    "associated_terms": [
                        "ai-generated content (aigc)",
                        "diffusion-based tampering",
                        "forgery images from diverse generative methods, e.g., gans and diffusion models",
                        "gan-based image editing",
                        "generation",
                        "machine learning-based forgeries, often generated using generative adversarial networks (gans)",
                        "multimedia contents synthetically altered or created by means of machine learning generative models",
                        "synthetic multimedia"
                    ],
                    "children": [
                        {
                            "name": "Full Synthesis",
                            "description": "Analysis of media that is completely generated by an AI model.",
                            "examples": [
                                "Determining if an entire image, presented as evidence, was created by a text-to-image model like DALL-E or Midjourney."
                            ],
                            "associated_terms": [
                                "ai-generated faces",
                                "ai-generated image",
                                "ai-generated image detection",
                                "ai-generated images",
                                "ai-synthesized faces",
                                "both the face and the speech of the video subject have been generated through deepfake technologies",
                                "dall-e",
                                "diffusion-based generative videos",
                                "diffusion-generated deepfake",
                                "diffusion-generated image",
                                "diffusion-generated images",
                                "digitally generated images",
                                "entire face synthesis",
                                "fake artwork detection",
                                "fake faces",
                                "fake image",
                                "fake images generated by various text-to-image generation models",
                                "full face synthesis",
                                "gan generated images",
                                "gan-generated",
                                "gan-generated face images",
                                "gan-generated high-resolution images of human faces",
                                "gan-generated image",
                                "gan-generated images",
                                "gan-generated synthetic images",
                                "generated image detection",
                                "generated images",
                                "glide",
                                "latent diffusion image",
                                "midjourney",
                                "progan",
                                "stable diffusion v1.4&1.5",
                                "stable diffusion v2.0",
                                "stylegan",
                                "stylegan2",
                                "stylegan3",
                                "synthesized image",
                                "synthesized images",
                                "synthesized images by gan models",
                                "synthetic face",
                                "synthetic face images",
                                "synthetic faces",
                                "synthetic image",
                                "synthetic images"
                            ],
                            "associated_papers": [
                                "f583b553a96f18a8607266ab2b84f6de78483ada",
                                "daa6e6ccc1704cbc01484fba0fed919654cc29ce",
                                "7b4d01704f6d6341a1e82bd5cb00c590ff187347",
                                "1cf16975ad7bccd7792a674711e8a0ba8118f974",
                                "db2ae35960da95d4514002ddd62f0ef0f7930ab8",
                                "350d7cfe8d291ee535698ca37633486ff5602234",
                                "d22030f2211d274187f6bf8b70736ec0ebb91e34",
                                "4beb8acb31455f801c0c2e3dab5b75a5beb45c85",
                                "d9d82eb6a8886226724ea230a7e5923d660a0bad",
                                "a5b6416bbea65a62b4356dbdd6b2056bd8dbc013",
                                "3d02f50ff0468bcac95efb8d1c04254a728ae908",
                                "fff602fd7bf68c9b8cec66fb70bad777d4e47fb1",
                                "92ac9389fd065c535d666b30bd416ea7597d2acc",
                                "b50f15c27a946e390731ee1e9b10c52502ae61dd",
                                "ad225e780144a20d0d2100a60117eba594bfcd94",
                                "ad06cfce1401ad61916a13f2457a8cfed36b5b75",
                                "446cad138bd54a12281ccb93b043683ab231f290",
                                "15cda7c4604c983fce3f037b14791e0fa629d355",
                                "278b3d593b5ec997d657ffad046364e1f33f466f",
                                "55e4cdf5639d3e43324f2d3a9586ccf3ab4836c4",
                                "fb218c1904211531acac7ef1f55f5be660b38859",
                                "985c4c6b6dd50ebb9871792d5e8d47a5161f87de",
                                "46521a35610a11ccf65ef81cdfafc32a2b7bbf9d",
                                "339489f84d360666f6f8773416a35383c2f88978",
                                "daabfb86f0938a6902f8f0e58cfed3bc95af06fa",
                                "0eada4b19bd4b415a27bd3ec891c3fc3e0cd2404",
                                "7020139666d01234f0f622fc27ca9d0cdb4e368c",
                                "a7c2b9ec19dc13711a1ba50a4a45087f62a4482a",
                                "ef2352611302f7f7a5ab5aec4d014df2b838402c",
                                "b6e9a253f36b13ee48ab441f4e7b0937c73982f5",
                                "352b08d4a972d4461ac66981a05c3de5eeab0c52",
                                "49032618b997a60abab157f146af3790f1bd8f78",
                                "1e0f31b709868c0bc6c2ab6f5f3f4d53b8959399",
                                "9ee9896aa9a10f6d16d6d4f796c3469e4c964f0e",
                                "0fafac05423aa187d85cc12bce1865aefc787700",
                                "11bb3a3b071f7bc394f68816ba88fb05f3d7e14e",
                                "c3659e3249946630ef009a0aecca58414d8da2c6",
                                "cbf1cf177ea6c4be00fa697b39b6f2fccd6ba22e"
                            ]
                        },
                        {
                            "name": "Removal / Inpainting",
                            "description": "Detecting cases where a selected region or object was removed and artificially filled in.",
                            "examples": [
                                "Finding evidence that a weapon was digitally removed from a suspect's hand in a photograph."
                            ],
                            "associated_terms": [
                                "deep inpainting",
                                "deep learning-based inpainting",
                                "inpainting",
                                "lama",
                                "object removal",
                                "object-removal",
                                "obstacle removal",
                                "paintbyexample",
                                "region removal",
                                "removal",
                                "shadow removal"
                            ],
                            "associated_papers": [
                                "b09b127187c7f587f994c1f22abd4956c7791818",
                                "08561b46633e2fd7ca6caca41879f64d037316c2",
                                "7a24cae4b0640a34eadb561b2078cb54ec30b27e",
                                "050249b14e76f3f8154086a37d55f152139360db",
                                "1ea0adf245289135753eeb97f2ce9fb93a421cba",
                                "662b4cab33d9ab4bb75bbcb906284019148adeae",
                                "d41f82000822bc43e51f10b9de30b2980a2d0293",
                                "aeeebb3f0671626b046d76767bef12ad4ad202c2",
                                "d859ed3c48867e31faf2350ca716a46f0b7da890",
                                "77cdbb1ed5ae6604dadc83f16e6d193bb5b35750",
                                "e00fe96691218e64d2f4c4891425e87864cce02f",
                                "c98fc25e411665541763c8d65802c743c3cf6ce7",
                                "496fc58cd1c9be43f03980404490012d0cbb0ffa",
                                "9b991f8e9a247c3ff0aeaae18354fb45fb079851",
                                "352b08d4a972d4461ac66981a05c3de5eeab0c52",
                                "b8d8f2834294897104e86f68a2f492058bfe5ccb",
                                "76a5bf61a80a962af0c71ef475a3de44d636e2be",
                                "696323496c53811e3324246d16dc524e686cfa05"
                            ]
                        },
                        {
                            "name": "Deepfakes",
                            "description": "Deepfakes are videos manipulated using deep learning (DL) technology so that a person could be shown saying things they never said.",
                            "examples": [
                                "Analyzing a video for artifacts related to expression/lip-sync manipulation or face swaps."
                            ],
                            "associated_terms": [
                                "ai-based face manipulating techniques, e.g., deepfake",
                                "audiovisual deepfake",
                                "audiovisual deepfakes",
                                "deep-fake video calls",
                                "deep-fake videos",
                                "deepfake",
                                "deepfake detection",
                                "deepfake face image detection",
                                "deepfake localization",
                                "deepfake model recognition",
                                "deepfake video",
                                "deepfake video detection",
                                "deepfake videos",
                                "deepfake-enabled face forgeries",
                                "deepfakes",
                                "deepfakes (df)",
                                "deepfakes (e.g., sophisticated ai media synthesis methods)",
                                "deepfakes videos",
                                "detection of deepfake videos in unknown domains",
                                "face deepfake",
                                "face digital manipulation attacks",
                                "face forgeries",
                                "face forgery",
                                "face forgery detection",
                                "face manipulation",
                                "face video forgery",
                                "facial deepfakes",
                                "facial forgery",
                                "fake videos (a.k.a deepfakes)",
                                "fine-grained open-set deepfake detection",
                                "gan-based face manipulation",
                                "general face forgery",
                                "locating forged faces in arbitrary videos",
                                "low-quality compressed deepfake images",
                                "manipulated face images",
                                "multi-face forgery detection",
                                "multi-modal deepfake detection",
                                "partial faces attack",
                                "sequential deepfake detection",
                                "sequential deepfake manipulation",
                                "sequential deepfake manipulations",
                                "tampered faces in a full-image",
                                "video deepfake detection",
                                "video face forgery",
                                "video face forgery detection"
                            ],
                            "children": [
                                {
                                    "name": "Expression / Attribute Manipulation",
                                    "description": "Detecting alterations to a person's facial expressions or addition of new attributes like a sunglasses.",
                                    "examples": [
                                        "Analyzing a video to see if a mustache was synthetically added to a person's face.",
                                        "Determining if a politician's frown was exaggerated to make them look angry."
                                    ],
                                    "associated_terms": [
                                        "adm",
                                        "anomalous facial movements",
                                        "attribute manipulation",
                                        "facial attribute manipulation",
                                        "facial attributes manipulation",
                                        "facial components manipulation",
                                        "facial emotion editing",
                                        "facial expression manipulation",
                                        "facial manipulation",
                                        "human facial manipulations",
                                        "landmark manipulation",
                                        "mouth manipulations",
                                        "partial face manipulation",
                                        "sequential facial manipulation",
                                        "textual sentiment editing"
                                    ],
                                    "associated_papers": [
                                        "17821ae52a83e230f1b4eb8c223394a9ffed9ffd",
                                        "bc6b963d47b466edc15d232938186d414ed38864",
                                        "c538d4dd9db06cd9d38385b0c051ecf7f90ee5a3",
                                        "2e11264b56654218ff82aab12d47aaebfda2e892",
                                        "c75b2f8227a5dc3d3ce82edfc233f430ac6d46e8",
                                        "ad225e780144a20d0d2100a60117eba594bfcd94",
                                        "a68f9ad83eab98d2cb6445093c834c9500d5e841",
                                        "ad06cfce1401ad61916a13f2457a8cfed36b5b75",
                                        "278b3d593b5ec997d657ffad046364e1f33f466f",
                                        "fb218c1904211531acac7ef1f55f5be660b38859",
                                        "339489f84d360666f6f8773416a35383c2f88978",
                                        "77f1a5e3166b7fca66870fb61ddc8d6070d12cd0",
                                        "307aea867ea8f93d7eb919af30ecd397515f1622",
                                        "e9991314d96a93e841cb3b6b80a0eb1cae9988b5"
                                    ]
                                },
                                {
                                    "name": "Lip-sync / Reenactment",
                                    "description": "Detecting if the audio of a person speaking is synchronized with a video of them, where the lip movements are synthetically generated to match the audio.",
                                    "examples": [
                                        "Identifying a video where a famous person appears to say something they never said, with their lip movements matching a fake audio track."
                                    ],
                                    "associated_terms": [
                                        "altering the lip movement and the associated speech signal",
                                        "audio-based and text-based lip-sync deep fakes",
                                        "face2face",
                                        "face2face (f2f)",
                                        "face2face reenactment",
                                        "lip synchronization",
                                        "lip-sync deep fake",
                                        "lip-sync deep fakes",
                                        "lip-syncing deepfake",
                                        "lipsync",
                                        "makeittalk",
                                        "sadtalker",
                                        "talking face generation",
                                        "talklip",
                                        "wav2lip"
                                    ],
                                    "associated_papers": [
                                        "e2b3bd137f7c619a000dcd04310065f4a9b4d823",
                                        "bc6b963d47b466edc15d232938186d414ed38864",
                                        "78bbdf7c04151ecaab04d5ddd21f3db597caf10c",
                                        "703dc51b138e49efa554e8dd5817e966b6a18c91",
                                        "4198e6f0bcd914b6d46825da1d18b990e0548c1f",
                                        "a2be7b89488a3157bcda1791a79885ddb4abf685",
                                        "0e95ab55fbccc38710599fa604ab980005e1894d",
                                        "22ab17a947b8417c2f17fcc0a2b3ddcafb34b8a3",
                                        "307aea867ea8f93d7eb919af30ecd397515f1622"
                                    ]
                                },
                                {
                                    "name": "Face Swap",
                                    "description": "Detecting if one person's face has been superimposed onto another person's body in a video.",
                                    "examples": [
                                        "Finding evidence that a suspect's face was placed on another person's body in a video to create a false alibi."
                                    ],
                                    "associated_terms": [
                                        "face swap",
                                        "face swap videos",
                                        "face swapping",
                                        "face swapping and face reenactment deepfake manipulations",
                                        "face swapping detection",
                                        "face swaps",
                                        "face-swap deep fake",
                                        "face-swap deep fakes",
                                        "face-swapping",
                                        "faceswap",
                                        "faceswap (fs)",
                                        "faceswapper",
                                        "identity manipulation based on face swapping methods"
                                    ],
                                    "associated_papers": [
                                        "e2b3bd137f7c619a000dcd04310065f4a9b4d823",
                                        "17821ae52a83e230f1b4eb8c223394a9ffed9ffd",
                                        "bc6b963d47b466edc15d232938186d414ed38864",
                                        "84797a6bc1dfddafe9321cd6981666d194c2f45e",
                                        "78bbdf7c04151ecaab04d5ddd21f3db597caf10c",
                                        "ad225e780144a20d0d2100a60117eba594bfcd94",
                                        "a68f9ad83eab98d2cb6445093c834c9500d5e841",
                                        "ac34eb68eafd5548a6332b17d912b2d66d595ce6",
                                        "0e95ab55fbccc38710599fa604ab980005e1894d",
                                        "278b3d593b5ec997d657ffad046364e1f33f466f",
                                        "0186c2b0297a7397bdd4eee38fc4b5d7c8145bfb",
                                        "8ca99309332d28208b770ec8cc7ca2fd0796b11a",
                                        "9790016cee11395d3000eca16d4229822a926a8a",
                                        "77f1a5e3166b7fca66870fb61ddc8d6070d12cd0"
                                    ]
                                }
                            ],
                            "associated_papers": [
                                "3c233de0f1bf308019b52920bae654043579491e",
                                "93542ad44c40160db215eb0e7004f8bfa12c67f3",
                                "966a74d33101e8387ee373996e0d3c06557dd32a",
                                "03b98f1d5b872484469bbcee2a31a2c1ab126d05",
                                "e2b3bd137f7c619a000dcd04310065f4a9b4d823",
                                "d00f0c46e8e34be5b417593039f7ceb309045214",
                                "535987021e5412d64a106899cedfc1630669893a",
                                "3a7dfd504abcd673e68c12b2ebd2a0beef5f52ab",
                                "5bf257b56d91b4a055ce7aabde119ba70e074528",
                                "5fabbe8948565fa6e9c8f26940ba24471aaffea7",
                                "daa6e6ccc1704cbc01484fba0fed919654cc29ce",
                                "86b10e1ad2bed9c230f6d9ec171fcb3abd9bf504",
                                "1cf16975ad7bccd7792a674711e8a0ba8118f974",
                                "350d7cfe8d291ee535698ca37633486ff5602234",
                                "4a1fd9950a56b12bc210ebfc4fe39992e45e2c4e",
                                "c1785306645975af4e5759bb43d93101671b0899",
                                "17821ae52a83e230f1b4eb8c223394a9ffed9ffd",
                                "fc1ae7b6d06f1a7132c2d3058fbf4fa7f6991748",
                                "47273d769687ebeaaaa30d4ed6cf2cd9ad3631b1",
                                "cf4ee08b8f571cc40f5c0e07906c49caf0ac023d",
                                "862b9f03aee26a0200079638fd359d5eeacf5766",
                                "c5411e31699f9e4afcbe247bf8358c40ab4614d9",
                                "af787675e84760ac383555ef9c760dd3fadf6e18",
                                "3916cb5c5ead76dc3a3c126fb41d68bc21571a1b",
                                "fe8002513d5e006473975a5e908a550ef7e3f3ad",
                                "e3e269034ebfc94da52d2133239114046c8c12ae",
                                "584c84f7b842a0a94605ed2a73f76004ee3afbd3",
                                "bc6b963d47b466edc15d232938186d414ed38864",
                                "97a821f4c33bfa3125dd3bbb308915501989d386",
                                "4477fa2ea9fb707d08f26876a1f28407449f70c8",
                                "0f138a9b3d90f3874ca5b2b0dd25db13bc3ce32b",
                                "513a2fec28bcd619994aa848d2786c4d70cf1442",
                                "84797a6bc1dfddafe9321cd6981666d194c2f45e",
                                "745d715623debdca4d1c719bc23c54ce11f7d96d",
                                "8b65ccd6e2b878639cc4bd01f6f0aea8d22e60b2",
                                "d163bd2e6e21b0613d71d6771d7ff0e3e40fc595",
                                "c538d4dd9db06cd9d38385b0c051ecf7f90ee5a3",
                                "2f471c7654d987b9de479a916c093d276e29665d",
                                "92ac9389fd065c535d666b30bd416ea7597d2acc",
                                "a4a9e86d06ca2eb6d2e6b17c9948e0e0cbd38815",
                                "493b4c6c75d75e3a20cc542e4f1781d083135eb4",
                                "cd67c21ed610ab3e60261d5bbada6af28a2e93c9",
                                "9cd483ace0faec5dff2abf4842bb24747d3f65a5",
                                "bdae1b866f6863143780bfbd69fea199947226e4",
                                "66970c48758b65a36d77c0fa9add1198d36ecd59",
                                "1537faa9593d0d20e62055e4e6af6d382a26d313",
                                "23af0df79d2067d5020779f8326121848b4535a3",
                                "6d9369ce9788fb8703427ab1ee1ff01c0acf6b6d",
                                "64266a2bea58937799631bfecda250f85b44bed1",
                                "29edb72285832acdbcd0dfb78754bf9d9ee827b0",
                                "601efcd42a4a6a8911e4c679f866453d5a8cdc37",
                                "1fdf904230ab4dabaa1f8f09c2549dcf61ee1bc1",
                                "a963409107c15b9148e1fedbce20c136f34e2ecc",
                                "75fdece24fe6efd7d52cd05f181bff84aa0e8957",
                                "ad225e780144a20d0d2100a60117eba594bfcd94",
                                "114bdf03192f1bcf1c3711867feaf9e3be6d8389",
                                "b3d1348c82b5f6192663770c1cb0b152e4c56558",
                                "0e95ab55fbccc38710599fa604ab980005e1894d",
                                "fa0eb73fa2c3cf855aab35068f8091ad43a8a770",
                                "25af3000258b2aca058582372aecfaf09e68fdcd",
                                "ad06cfce1401ad61916a13f2457a8cfed36b5b75",
                                "ead2fa2384ddb04076799ac80d8cd0c1ebbe8842",
                                "3da2ebabc5e624fb8c5bdf8114eabbe4394dcccd",
                                "eb752fd572ca2c984b56a06c9974fdfdf951acb6",
                                "dcf0af5e1fc8c9419d550eaeb114f6cbeae0a4f2",
                                "d797999184cfa4316611a1d2e23b358de02d763d",
                                "51cd05dc52aa348f988d91a549c292a653dcdaca",
                                "a19241eaaa6c35f8763b4c3bf5c754b9fdb09331",
                                "278b3d593b5ec997d657ffad046364e1f33f466f",
                                "fb218c1904211531acac7ef1f55f5be660b38859",
                                "5f2a9f3d2f5a0fc5af2feed51b2b3869b23a8e94",
                                "fc4defdfb3410bc0ebda8ffc7d7a9258519c6cd8",
                                "44b42a3a2ca7176df19625e53c5ef7cd998c4a02",
                                "649b3575b51c8f22afcb725707957111eaa92d7c",
                                "5b422386d8944f7ab10ec5e2067d596b8cc8a3bb",
                                "fddbfdb795cccf12aa9ca51398a04e305a0fb89b",
                                "3d0164cd742d7242cdb35e430835774691b31675",
                                "1688a3f88a267cea6f62c8a59cb056b3fdfae2e6",
                                "7865de456fcd5295ecb0d50f0403dc285febf4e7",
                                "ab315965c20e8cbdec6d19c4e97217f5be8fe443",
                                "100c45070074d8b596c5534a45db4634afdeeb52",
                                "41cbea36c8107d6ed4f3b89bd641e292d0096a24",
                                "c74db89fd744a2b42702820fcb52cbc56b67b0ff",
                                "ae9031848f86409f94f880a9d3d1ff9b4b76810d",
                                "e63665665902cda65863f2d78959e915329b8936",
                                "7020139666d01234f0f622fc27ca9d0cdb4e368c",
                                "9790016cee11395d3000eca16d4229822a926a8a",
                                "22ab17a947b8417c2f17fcc0a2b3ddcafb34b8a3",
                                "2c929659578d1fe4726d30f082d8b9604920f5d5",
                                "ce7ac6191a6ad0f09d5d4ec470f7a281f9a71397",
                                "6386480d8d7099bc51ec97df55459378a6eaa448",
                                "70b1924d08617ce67f0fb33f6b8778ef75b7c4e3",
                                "5985309dd9b6fb67e73f80692c7135f9340e45f5",
                                "c91cc020c68db7c8f9bb68a47f8416ef9438ffbd",
                                "e0356d1aa494b77b8db00f7f7e5734948a4859fd",
                                "87e8b0baf643a7d6f7329303d97595b2a13cc9f0",
                                "4f09843e22a085af935f0a31329e90cb1d5441ee",
                                "a7f14b2b0c6330b9fa61fda0b431de22dce90f84",
                                "b2c2d4b4f0ca78f58247944b1e808ba0d4197e5d",
                                "a4b03ff87322570e0ad26e37582ec4150d4d89f7",
                                "77f1a5e3166b7fca66870fb61ddc8d6070d12cd0",
                                "b40f3187f51a466607407cb8bc36eff24a60b665",
                                "6ae4c9c58adabf2741ee36bc7354a5cdbe78efa6",
                                "487e79c5016c4ad8c4db777ee60da8ee9a832b58",
                                "08305362b5b9aa61b5ee26995c4e11c01363d7b2",
                                "eabc4820fc95ebd763b582cd7f118c9d5ddd69cc",
                                "25abd66331728743e329e6254b42e62a03355ff1",
                                "c0adad8942e8d8b16315985ddd42efc1997873ee",
                                "b6644e452cbc3014e6be31707b3426b0832658b9",
                                "d909bad68c0165566bfc7a8ed1066b7435254707",
                                "aebf0aa3751d321f4ebbc50c24845e7ce2301b79",
                                "7c640a85c26145218df952fd3fd14e9f269376cd",
                                "72158d16aba68c3f05a2307370f777af27657633",
                                "45187881878cd6c21b944312b77e62cefed46b39",
                                "e086490b8d12ad311c216b2bc39bc5055657c0b3",
                                "af9b38362157c62119259ede4ffa205cb7602d3d",
                                "307aea867ea8f93d7eb919af30ecd397515f1622",
                                "c5cf56de10f74bb8cd9818f145ca0bfd33f9d961",
                                "ebea7a580eda3939bf84cb3af073f51c655ae2ef",
                                "bdcb34041aa9e2b73dae2f9ca0494ee599d29285",
                                "c6caadaf1a8d1bfcd4c820b05c1c213da6c4ab27",
                                "4f899299c366fa1b465afa109412b4597448e554",
                                "e9991314d96a93e841cb3b6b80a0eb1cae9988b5",
                                "004c7dbd5578865ac72cfa7b6ebc51c7fa7cda31",
                                "a531788b0d2a17db55cf0988e5efffac6c724dd3",
                                "49030ae220c863e9b72ab380ecc749c9d0f0ad13",
                                "ec7b1e63a36985e438d695aee196941d43c6eb5a",
                                "f09d0892d4547629301401547bd79e9be6984801",
                                "3031753892f70c040dca1d3cf1d024835a313a90",
                                "9f152ac298b7b98a8a0704a684f28f2b9bea3724",
                                "293282fedd6904ac878bd77520d8199751a7362c",
                                "235b28ef7a28114ae69bb5f8ac22578218edccc6",
                                "52bb62e004d4f793ec7ada2b0290f4df6f792712",
                                "30092c986fb08a64c04b5e3a1df533f39d45ed18"
                            ]
                        },
                        {
                            "name": "Generative Up-scaling",
                            "description": "Detecting if an image's resolution was artificially increased using generative models, which might introduce misleading details.",
                            "examples": [
                                "Verifying if a low-quality security camera image was up-scaled, potentially creating a false representation of a suspect's face."
                            ],
                            "associated_terms": []
                        },
                        {
                            "name": "Generative Expand",
                            "description": "Using a generative model to extend the borders of an existing image, creating new content that continues the original scene, background, and objects.",
                            "examples": [
                                "Detecting if an image had been extended from a portrait to a landscape by generating new scenery (e.g. mountains, sky, or sea) on the sides."
                            ],
                            "associated_terms": [
                                "generative regional editing",
                                "text-to-image"
                            ],
                            "associated_papers": [
                                "a5b6416bbea65a62b4356dbdd6b2056bd8dbc013",
                                "352b08d4a972d4461ac66981a05c3de5eeab0c52"
                            ]
                        }
                    ],
                    "associated_papers": [
                        "350d7cfe8d291ee535698ca37633486ff5602234",
                        "3916cb5c5ead76dc3a3c126fb41d68bc21571a1b",
                        "34882c09c24dbb570044047b026ab294ebb92f5d",
                        "15cda7c4604c983fce3f037b14791e0fa629d355",
                        "662b4cab33d9ab4bb75bbcb906284019148adeae",
                        "352b08d4a972d4461ac66981a05c3de5eeab0c52",
                        "0242a45fce48169b1eae137e9888bbbee7786ac4",
                        "696323496c53811e3324246d16dc524e686cfa05"
                    ]
                },
                {
                    "name": "Content Rearrangement",
                    "description": "Detecting manipulations where existing parts of the media are moved, copied, or spliced.",
                    "examples": [
                        "Finding a duplicated crowd section in a photo to make a protest appear larger."
                    ],
                    "associated_terms": [
                        "content aware image retargetting",
                        "content-based copy detection (cbcd)",
                        "copy-edit images",
                        "image copy",
                        "image repurposing",
                        "miscontextualization",
                        "out-of-context (ooc) misuse of media",
                        "out-of-context images",
                        "repurposing historical content for generation",
                        "seam carving"
                    ],
                    "children": [
                        {
                            "name": "Copy-move",
                            "description": "Detecting if a part of an image was copied and pasted to another location within the same image.",
                            "examples": [
                                "Finding a cloned vehicle in an image of a parking lot to hide another object."
                            ],
                            "associated_terms": [
                                "copy-move",
                                "copy-move forgeries",
                                "copy-move forgery",
                                "copy-move forgery detection (cmfd)",
                                "region copy-move"
                            ],
                            "associated_papers": [
                                "b09b127187c7f587f994c1f22abd4956c7791818",
                                "72896d13ed711bcca0323e1e03d7cc0d9c6b8e70",
                                "2cb051c1b7fb8fc5eab7247e121a890cac4bb92a",
                                "08561b46633e2fd7ca6caca41879f64d037316c2",
                                "7a24cae4b0640a34eadb561b2078cb54ec30b27e",
                                "afdf89219bd4fa2e590d4aa3f28d9194f66b3fcf",
                                "1ea0adf245289135753eeb97f2ce9fb93a421cba",
                                "662b4cab33d9ab4bb75bbcb906284019148adeae",
                                "d41f82000822bc43e51f10b9de30b2980a2d0293",
                                "f373ba05eb7cf93041615f2bcb095118ecacadfe",
                                "d859ed3c48867e31faf2350ca716a46f0b7da890",
                                "77cdbb1ed5ae6604dadc83f16e6d193bb5b35750",
                                "e00fe96691218e64d2f4c4891425e87864cce02f",
                                "496fc58cd1c9be43f03980404490012d0cbb0ffa",
                                "9b991f8e9a247c3ff0aeaae18354fb45fb079851",
                                "b8d8f2834294897104e86f68a2f492058bfe5ccb",
                                "fc4813cffea87f21f2786c68cd364c5f2c608f2a",
                                "76a5bf61a80a962af0c71ef475a3de44d636e2be",
                                "0242a45fce48169b1eae137e9888bbbee7786ac4",
                                "696323496c53811e3324246d16dc524e686cfa05"
                            ]
                        },
                        {
                            "name": "Splicing",
                            "description": "Detecting if a region from one image is inserted into another.",
                            "examples": [
                                "Identifying that a building from a separate photo was spliced into a city image."
                            ],
                            "associated_terms": [
                                "constrained image splicing detection and localization (cisdl)",
                                "image splicing",
                                "image splicing, copy-move and removal",
                                "partial splicing attack (psa)",
                                "region splicing",
                                "splicing",
                                "splicing forgery images"
                            ],
                            "associated_papers": [
                                "b09b127187c7f587f994c1f22abd4956c7791818",
                                "08561b46633e2fd7ca6caca41879f64d037316c2",
                                "9db8faf20e9a80cca90d4f430c8289a18d75233a",
                                "7a24cae4b0640a34eadb561b2078cb54ec30b27e",
                                "af787675e84760ac383555ef9c760dd3fadf6e18",
                                "28b6ed26324b4b1266685129c3e3202b20b3ff6d",
                                "c75b2f8227a5dc3d3ce82edfc233f430ac6d46e8",
                                "ddb645fd661bf4475bcf289e957c1461193e2096",
                                "1ea0adf245289135753eeb97f2ce9fb93a421cba",
                                "662b4cab33d9ab4bb75bbcb906284019148adeae",
                                "d41f82000822bc43e51f10b9de30b2980a2d0293",
                                "135e027c20e2291558b210646f3271eef00ecdff",
                                "d859ed3c48867e31faf2350ca716a46f0b7da890",
                                "77cdbb1ed5ae6604dadc83f16e6d193bb5b35750",
                                "2d7da0d62768a99fb086cc4bbd5d4d2bb973dd03",
                                "420070ca7066b2b8fd5210539839beb972c78b2e",
                                "a3dfbcc1fa783c291748b20963ec2cfdc00bcc7e",
                                "91425ace0d1cd3ff144184b85b7e55ba865ae82a",
                                "e00fe96691218e64d2f4c4891425e87864cce02f",
                                "496fc58cd1c9be43f03980404490012d0cbb0ffa",
                                "9b991f8e9a247c3ff0aeaae18354fb45fb079851",
                                "3717e40f0fe1a528f5be87f6022f6be771fe836c",
                                "23d255980106603705e5489b318943fd5fc4dc5e",
                                "f98e89ae858b6073b86244d1ba7dcd0ea5c740bb",
                                "b8d8f2834294897104e86f68a2f492058bfe5ccb",
                                "76a5bf61a80a962af0c71ef475a3de44d636e2be",
                                "0242a45fce48169b1eae137e9888bbbee7786ac4",
                                "696323496c53811e3324246d16dc524e686cfa05"
                            ]
                        },
                        {
                            "name": "Cropping",
                            "description": "Analyzing an image to determine if it has been cropped, potentially to remove exculpatory or contextual information.",
                            "examples": [
                                "Determining if a photo was cropped to remove another individual who was present at the scene."
                            ],
                            "associated_terms": []
                        }
                    ],
                    "associated_papers": [
                        "b6ea3fbc50476a1be3b7cb7e013edd2461a5409f",
                        "a1f0436ef71ae4699f481021bbe548e5ca6f2475",
                        "418d4ce2a36a7cfc20ff40c557ed00c57a0f4245",
                        "a68f9ad83eab98d2cb6445093c834c9500d5e841",
                        "ddb645fd661bf4475bcf289e957c1461193e2096",
                        "95cdc4f6f828a4c55790306c88e565dbc1d71915",
                        "e8b67284e45221a848794d49cef249cc171ea7f1",
                        "7b3a430caf62d8c63457c586b39f078a3bca2bd7"
                    ]
                },
                {
                    "name": "Signal-level Post-processing",
                    "description": "Detecting manipulations that affect the entire signal, such as compression, which can be used to hide other alterations.",
                    "examples": [
                        "Analyzing JPEG compression artifacts to see if an image has been re-saved multiple times, a common tactic to obscure edits."
                    ],
                    "associated_terms": [
                        "benign manipulations (jpeg, gaussiannoise, gaussianblur, medianblur)",
                        "detecting the editing tools and operations in photoshop",
                        "photoshop",
                        "pixel-level manipulations"
                    ],
                    "children": [
                        {
                            "name": "Compression",
                            "description": "Analyzing compression artifacts and levels to understand an image's history.",
                            "examples": [
                                "Detecting double JPEG compression, which can be an indicator of tampering."
                            ],
                            "associated_terms": [
                                "low and mixed-compression quality images"
                            ],
                            "associated_papers": [
                                "350d7cfe8d291ee535698ca37633486ff5602234"
                            ]
                        }
                    ],
                    "associated_papers": [
                        "662b4cab33d9ab4bb75bbcb906284019148adeae",
                        "3532970dfe79da265e4eb70a227dd2aeb90acaa6",
                        "8ca99309332d28208b770ec8cc7ca2fd0796b11a",
                        "352b08d4a972d4461ac66981a05c3de5eeab0c52"
                    ]
                },
                {
                    "name": "Steganography",
                    "description": "Detecting hidden data or messages concealed within a media file.",
                    "examples": [
                        "Extracting hidden text messages from an image file shared between two suspects."
                    ],
                    "associated_terms": [
                        "generative steganographic image",
                        "steganography"
                    ],
                    "associated_papers": [
                        "5de16139070cf221ad5b2f25a40b1703da936513"
                    ]
                },
                {
                    "name": "File Structure Tampering",
                    "description": "Analyzing the file's binary structure for evidence of manual or programmatic alteration.",
                    "examples": [
                        "Finding inconsistencies in the header of a video file that indicate it was improperly edited or corrupted."
                    ],
                    "associated_terms": [],
                    "children": [
                        {
                            "name": "Metadata Tempering",
                            "description": "Detecting alterations to a file's metadata (e.g., EXIF data) to mislead an investigation.",
                            "examples": [
                                "Identifying that the creation date of a photograph has been changed to create a false alibi.",
                                "Finding inconsistencies between the GPS data in the metadata and the visual content of an image."
                            ],
                            "associated_terms": []
                        }
                    ]
                }
            ],
            "associated_papers": [
                "b6ea3fbc50476a1be3b7cb7e013edd2461a5409f",
                "45394b7248a492f974d4ec0b42ba10b46a0bbbbd",
                "a1f0436ef71ae4699f481021bbe548e5ca6f2475",
                "a14db9b48dc6ff8567d7042726ab67b543890fe8",
                "7a24cae4b0640a34eadb561b2078cb54ec30b27e",
                "17821ae52a83e230f1b4eb8c223394a9ffed9ffd",
                "4ac72a7b775beb32867b25f82b17f601d793803e",
                "050249b14e76f3f8154086a37d55f152139360db",
                "3d02f50ff0468bcac95efb8d1c04254a728ae908",
                "f4c6c2f4385612ca3800e96edd656d2e0ee4814a",
                "c75b2f8227a5dc3d3ce82edfc233f430ac6d46e8",
                "8450c27a2edc8ce36e4e4135989250b44624049d",
                "3ab09c991fd9b5132965c2ebb2c3e0c96660aa0d",
                "a68f9ad83eab98d2cb6445093c834c9500d5e841",
                "eb752fd572ca2c984b56a06c9974fdfdf951acb6",
                "195608bc28010cdaabc49b683c89c9aff34bff93",
                "d4abc59c270a0251a549b18d32d79288cebcef1c",
                "967b9a9d2bcf64f081f6cdb8f13087de5d97ddc6",
                "1ea0adf245289135753eeb97f2ce9fb93a421cba",
                "d41f82000822bc43e51f10b9de30b2980a2d0293",
                "a9c27bcf111818155ef66e47ee4595fdf0315cd2",
                "0bddd6d9ef05d2e7a86965b5a5b37216c330dac6",
                "77cdbb1ed5ae6604dadc83f16e6d193bb5b35750",
                "3532970dfe79da265e4eb70a227dd2aeb90acaa6",
                "bcd886bed631db5a58dc81911d602b49c3bcfd54",
                "876d0a6d9bfb016658f187029a8682875e98cf37",
                "64e3a1da4df2ea6b23ab997a94af1dceb21c7a8b",
                "49dbe6806eaa5a5686355b49b6f796f5fda8f255",
                "496fc58cd1c9be43f03980404490012d0cbb0ffa",
                "9b991f8e9a247c3ff0aeaae18354fb45fb079851",
                "5a7932ebb0fb404735bdc22f374a7caed9e78166",
                "2dea5ec6d6ad560d7a7d124fc2d686a4f6af26db",
                "c7bde2b7b3f0139dc8fc888523106c6fe229fe2c",
                "7e3b3d82df3c22cb90f10921f28c2a3f6c07e77f",
                "0df4cec837ce53db955d698dfbc972d76c1abfdf",
                "f98e89ae858b6073b86244d1ba7dcd0ea5c740bb",
                "b8d8f2834294897104e86f68a2f492058bfe5ccb",
                "53b09951e13f6e23af65db5bdc08f7bf4a2def9a",
                "76a5bf61a80a962af0c71ef475a3de44d636e2be",
                "0242a45fce48169b1eae137e9888bbbee7786ac4",
                "da80008114ba95d92b68af977a6df042ddfb47c0",
                "e6bbd4b0e2b7fa49c75bdb40329e88ff11b5fb23",
                "7b3a430caf62d8c63457c586b39f078a3bca2bd7",
                "7105378af541b2b6df10bc9a9c7f569a1a2852ab",
                "9f152ac298b7b98a8a0704a684f28f2b9bea3724",
                "cbf1cf177ea6c4be00fa697b39b6f2fccd6ba22e"
            ]
        },
        {
            "name": "Source Identification & Attribution",
            "description": "Determining the origin of a piece of digital media, such as the specific device that captured it or the AI model that generated it.",
            "examples": [
                "Attributing a series of synthetic videos to a single generative model used in a disinformation campaign.",
                "Identifying the model of smartphone that took a picture found on a suspect's computer."
            ],
            "associated_terms": [
                "model attribution",
                "origin attribution of generated images",
                "synthetic image source attribution"
            ],
            "children": [
                {
                    "name": "Device Source Identification",
                    "description": "Identifying the hardware (e.g., camera, scanner) that created the media.",
                    "examples": [
                        "Using Photo Response Non-Uniformity (PRNU) patterns to link a photo to a specific digital camera."
                    ],
                    "associated_terms": [
                        "camera model identification (cmi)",
                        "source camera identification"
                    ],
                    "associated_papers": [
                        "45394b7248a492f974d4ec0b42ba10b46a0bbbbd",
                        "f1b716658721539ff99ef07dd5bbcf151f6beabc"
                    ]
                },
                {
                    "name": "Generative Model Attribution",
                    "description": "Identifying the specific AI model or architecture used to create synthetic media.",
                    "examples": [
                        "Analyzing artifacts in a generated image to determine if it was made by a GAN-based or Diffusion-based model."
                    ],
                    "associated_terms": [
                        "controlnet",
                        "gan generation",
                        "generative adversarial network (gan)",
                        "generative adversarial networks (gan)",
                        "generative adversarial networks (gans)",
                        "gans and diffusions",
                        "images manipulated with particular generative models (gms)",
                        "images produced by both generative adversarial networks (gans) and recent large text-to-image models (ltims) that rely on diffusion models",
                        "trace the images generated by a specific latent generative model"
                    ],
                    "children": [
                        {
                            "name": "Fingerprint Attribution",
                            "description": "Finding unique, subtle artifacts (fingerprints) left by a specific generative model.",
                            "examples": [
                                "Matching a unique noise pattern in a set of fake images to a known generative model."
                            ],
                            "associated_terms": [
                                "crn",
                                "cyclegan",
                                "ddpm",
                                "denoising diffusion probabilistic models (ddpm)",
                                "diffae",
                                "diffface",
                                "gan",
                                "gaugan",
                                "neuraltextures",
                                "neuraltextures (nt)",
                                "sitd",
                                "stargan",
                                "stylemap-gan",
                                "vqdm",
                                "wukong"
                            ],
                            "children": [
                                {
                                    "name": "Diffusion-based",
                                    "description": "Attributing content to a specific diffusion model.",
                                    "examples": [
                                        "Identifying artifacts unique to the Stable Diffusion architecture in a generated image."
                                    ],
                                    "associated_terms": [
                                        "diffusion models",
                                        "diffusion models (dms)",
                                        "diffusion-based",
                                        "dm-based",
                                        "glide",
                                        "stable diffusion v1.4&1.5",
                                        "stable diffusion v2.0"
                                    ],
                                    "associated_papers": [
                                        "c1785306645975af4e5759bb43d93101671b0899",
                                        "339489f84d360666f6f8773416a35383c2f88978",
                                        "7020139666d01234f0f622fc27ca9d0cdb4e368c",
                                        "a7c2b9ec19dc13711a1ba50a4a45087f62a4482a",
                                        "b6e9a253f36b13ee48ab441f4e7b0937c73982f5",
                                        "352b08d4a972d4461ac66981a05c3de5eeab0c52"
                                    ]
                                },
                                {
                                    "name": "GAN-based",
                                    "description": "Attributing content to a specific Generative Adversarial Network (GAN).",
                                    "examples": [
                                        "Detecting the 'checkerboard' artifacts common left by early GAN models."
                                    ],
                                    "associated_terms": [
                                        "biggan",
                                        "gan",
                                        "gan-based",
                                        "progan",
                                        "stylegan",
                                        "stylegan2",
                                        "stylegan3"
                                    ],
                                    "associated_papers": [
                                        "278b3d593b5ec997d657ffad046364e1f33f466f",
                                        "339489f84d360666f6f8773416a35383c2f88978",
                                        "7020139666d01234f0f622fc27ca9d0cdb4e368c",
                                        "b6e9a253f36b13ee48ab441f4e7b0937c73982f5"
                                    ]
                                },
                                {
                                    "name": "Flow-based",
                                    "description": "Attributing content to a flow-based model (i.e. models that leveraging normalizing flow).",
                                    "examples": [
                                        "Analyzing an image for the subtle, less-studied fingerprints left by flow-based generative models."
                                    ],
                                    "associated_terms": []
                                }
                            ],
                            "associated_papers": [
                                "e2b3bd137f7c619a000dcd04310065f4a9b4d823",
                                "17821ae52a83e230f1b4eb8c223394a9ffed9ffd",
                                "0e95ab55fbccc38710599fa604ab980005e1894d",
                                "278b3d593b5ec997d657ffad046364e1f33f466f",
                                "339489f84d360666f6f8773416a35383c2f88978",
                                "7020139666d01234f0f622fc27ca9d0cdb4e368c",
                                "235b28ef7a28114ae69bb5f8ac22578218edccc6"
                            ]
                        },
                        {
                            "name": "Model Watermark Detection",
                            "description": "Detecting invisible watermarks embedded by AI models to indicate that the content is synthetic.",
                            "examples": [
                                "Scanning an image for a SynthID watermark to confirm it was generated by a Google model."
                            ],
                            "associated_terms": [
                                "protect copyrights and localize tamper areas for aigc-based editing methods",
                                "watermark"
                            ],
                            "associated_papers": [
                                "34882c09c24dbb570044047b026ab294ebb92f5d",
                                "3495c49a807bbb2620d62a3035aa58795d0c1095"
                            ]
                        }
                    ],
                    "associated_papers": [
                        "ae525ad27975b08173d062b1a594e21afa1dfb7b",
                        "3916cb5c5ead76dc3a3c126fb41d68bc21571a1b",
                        "745d715623debdca4d1c719bc23c54ce11f7d96d",
                        "c75b2f8227a5dc3d3ce82edfc233f430ac6d46e8",
                        "41f1050e8c6550817d8bda92bd6371c6678a01ab",
                        "a7c2b9ec19dc13711a1ba50a4a45087f62a4482a",
                        "2dea5ec6d6ad560d7a7d124fc2d686a4f6af26db",
                        "352b08d4a972d4461ac66981a05c3de5eeab0c52",
                        "7e3b3d82df3c22cb90f10921f28c2a3f6c07e77f"
                    ]
                },
                {
                    "name": "Actor & Campaign Attribution",
                    "description": "Linking a piece of media to a specific person, group, or organized campaign.",
                    "examples": [
                        "Connecting multiple pieces of disinformation across different platforms to a single foreign actor based on metadata and content similarities."
                    ],
                    "associated_terms": []
                }
            ],
            "associated_papers": [
                "7494d53a4ddbc33620f35f3f8bcb3b10704c1eee",
                "41f1050e8c6550817d8bda92bd6371c6678a01ab",
                "5d8fbdf6f21215dc34ba2fad0979bc4639a65487",
                "05dab940b4d26053d07b34f9cc9805ea26b37b09"
            ]
        },
        {
            "name": "Integrity & Provenance Verification",
            "description": "Verifying that a piece of media has not been tampered with and tracking its history or chain of custody.",
            "examples": [
                "Using a cryptographic hash to verify that a video file collected as evidence is identical to the original.",
                "Checking a digital watermark to confirm the original photographer of an image.",
                "Analyzing a file's provenance data to trace its edit history."
            ],
            "associated_terms": [],
            "children": [
                {
                    "name": "Watermark Verification",
                    "description": "Checking for the presence and validity of a digital watermark.",
                    "examples": [
                        "Confirming the copyright holder of a photograph by extracting and verifying its embedded watermark."
                    ],
                    "associated_terms": [
                        "watermark"
                    ],
                    "associated_papers": [
                        "3495c49a807bbb2620d62a3035aa58795d0c1095"
                    ]
                },
                {
                    "name": "Provenance Analysis",
                    "description": "Reconstructing the lifecycle of a digital asset, including its creation and all subsequent modifications.",
                    "examples": [
                        "Using C2PA (Coalition for Content Provenance and Authenticity) data to see when and how an image was edited."
                    ],
                    "associated_terms": []
                }
            ]
        },
        {
            "name": "Contextual Analysis",
            "description": "Analyzing the context in which a piece of media is found or shared to assess its credibility, rather than analyzing the content itself.",
            "examples": [
                "Performing a reverse image search to find the original context of a photo that is being used misleadingly.",
                "Analyzing when and where an image was posted to see if it aligns with the event it claims to depict."
            ],
            "associated_terms": [
                "detect conflicting image-caption triplets",
                "fake news",
                "fake news detection",
                "fake news video detection",
                "fake news videos",
                "misinformation",
                "multi-domain fake news detection",
                "multi-modal fake media",
                "multi-modal misinformation detection",
                "multimodal fake news",
                "multimodal fake news detection",
                "validating the veracity of a statement given an image"
            ],
            "associated_papers": [
                "a1f0436ef71ae4699f481021bbe548e5ca6f2475",
                "38ff6bae846d70d341c8732717c0f593180f318b",
                "8305072793905475f5037b5b74489575d3cb1d64",
                "4915a3ca61e6cdcfcaa47297ad269958bec37a5d",
                "96704efeb471a64178a3356662c5fb42e451f16e",
                "0c107281ab54d0dd4df7539a18afebf6e3478bfb",
                "569d56db5a41bec03e810e71baa7f1c6c9daaebc",
                "a9c27bcf111818155ef66e47ee4595fdf0315cd2",
                "31d1e0735693bb0fc8d848123aa4b5a369d2bd45",
                "ba1823889a80c231966a0f24e57c6cf4a569ff8c",
                "5bba1210ea95b8d17cf3ed32728468b37c01c0c9",
                "601c4ce8ecbf84ff18f7f829e9698a46e75e3e5d",
                "27f45012acd0c304a198456b9b4163ed15c18e1a",
                "7d6d34612dba3bcc09bede925d5d91332c0654d4",
                "411980f6b8e2e0ddb3a971b3fb1a56cb94d6dca4",
                "793c52446e15b12e50ea34b376d48bc1fc8020f2",
                "7b3a430caf62d8c63457c586b39f078a3bca2bd7"
            ]
        }
    ]
}